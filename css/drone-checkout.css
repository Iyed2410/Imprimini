/* Variables */
:root {
  --main-color: #f16161;
  --darker-color: #9f2c2c;
  --success-color: #53e2c2;
  --darker-success: #36d09d;
  --yellow: #0091ec;
  --demo-width: 300px;
  --drone-left: 16px;
  --circle-size: 40px;
  --circle-left-pad: 30px;
  --grabbers-shift-y: 15px;
  --grab-y-change: -70px;
  --text-y-shift: 20px;
}

.demo {
  position: relative;
  width: var(--demo-width);
  height: 64px;
  padding-left: calc(var(--circle-size) + var(--circle-left-pad));
  padding-right: calc(var(--circle-left-pad) / 2);
  border-radius: 10px;
  background: var(--main-color);
  transition: background-color 1s;
  cursor: pointer;
}

.demo:before,
.demo:after {
  content: "";
  position: absolute;
  left: 5%;
  bottom: 100%;
  width: 14%;
  height: 6px;
  background: var(--darker-color);
  transform: scaleX(0);
  transform-origin: 0 100%;
}

.demo:after {
  left: 19%;
  width: 66%;
}

.demo.s--processing {
  background-color: var(--success-color);
  transition-delay: 4.4s;
}

.demo.s--processing:before,
.demo.s--processing:after {
  transform: scaleX(1);
  background-color: var(--darker-success);
}

.demo.s--processing:before {
  transition: transform 0.6s 1.2s, background-color 1s 4.4s;
}

.demo.s--processing:after {
  transition: transform 2.6s 2.4s, background-color 1s 4.4s;
}

.demo.s--reverting {
  background-color: var(--main-color);
  transition: background-color 0.5s 0.96s;
}

.demo.s--reverting:before,
.demo.s--reverting:after {
  opacity: 0;
}

.demo svg {
  overflow: visible;
  fill: none;
  stroke-linejoin: round;
}

.demo__drone-cont {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.demo__drone-cont--takeoff {
  z-index: -1;
  opacity: 0;
}

.demo.s--processing .demo__drone-cont--takeoff {
  opacity: 1;
  transform: translateY(var(--grab-y-change));
  transition: transform 0.8s, opacity 0.2s;
  transition-delay: 1.2s;
}

.demo.s--processing .demo__drone-cont--shift-x {
  transition: transform 2.6s 2.4s;
  transform: translateX(239px);
}

.demo.s--processing .demo__drone-cont--landing {
  transform: translateY(24px);
  transition: transform 0.3s 5s;
}

.demo__drone {
  position: absolute;
  left: var(--drone-left);
  top: -12px;
  width: 68px;
  height: 56px;
  stroke: #000;
  stroke-width: 2px;
  fill: none;
}

@keyframes tiltAnim {
  8%, 24% { transform: rotate(0); }
  35%, 70% { transform: rotate(8deg); }
  85% { transform: rotate(-4deg); }
  95%, 100% { transform: rotate(0); }
}

.demo.s--processing .demo__drone {
  transform-origin: 50% 100%;
  animation: tiltAnim 2.6s 1.2s;
}

.demo.s--processing .demo__drone-leaving {
  transform: translate(150px, -150px) rotate(20deg) scale(0.3);
  opacity: 0;
  transition: transform 1.1s 5.3s, opacity 0.55s 5.85s;
}

.demo__drone-arm {
  --rotation: 0deg;
  transform-origin: 68px 56px;
  transform: rotate(var(--rotation));
}

.demo__drone-arm--2 {
  transform: scaleX(-1) rotate(var(--rotation));
}

.demo.s--processing .demo__drone-arm {
  --rotation: 25deg;
  transition: transform 0.3s 5.2s;
}

.demo__drone-green {
  fill: var(--main-color);
}

.demo.s--processing .demo__drone-green {
  fill: var(--success-color);
  transition: fill 1s 4.4s;
}

.demo__drone-yellow {
  fill: var(--yellow);
}

@keyframes revertAnim {
  40%, 45% { transform: translate(-478px, 0); }
  75% { transform: translate(-478px, -100px); }
  100% { transform: translate(-478px, 100px); }
}

.demo.s--reverting .demo__drone-package {
  opacity: 0;
  transition: opacity 0s 2s;
  animation: revertAnim 2s;
}

.demo__circle {
  position: absolute;
  left: var(--circle-left-pad);
  top: 50%;
  width: var(--circle-size);
  height: var(--circle-size);
  margin-top: calc(var(--circle-size) / -2);
  border-radius: 50%;
  background: var(--darker-color);
}

.demo.s--processing .demo__circle {
  background-color: var(--success-color);
  transition: background-color 1s 4.4s;
}

.demo.s--reverting .demo__circle {
  background-color: var(--darker-color);
  transition: background-color 0.5s 0.96s;
}

.demo__circle-inner {
  overflow: hidden;
  position: absolute;
  left: 0;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  border-radius: inherit;
}

.demo__circle-package {
  width: 14px;
  height: 18px;
  stroke: #fff;
  stroke-width: 3px;
  stroke-linecap: round;
}

.demo.s--processing .demo__circle-package {
  transform: translateY(var(--grab-y-change));
  transition: transform 0.8s 1.2s;
}

.demo.s--reverting .demo__circle-package {
  transform: translateY(0);
  transition: transform 0.16s 1.6s;
}

.demo__circle-grabbers {
  --grabY: 0px;
  --grabRotate: 0;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.demo__circle-grabbers:before,
.demo__circle-grabbers:after {
  content: "";
  position: absolute;
  right: 5px;
  top: -12px;
  width: 14px;
  height: 8px;
  border: 2px solid #000;
  border-left: none;
  border-bottom: none;
  transform: translateY(var(--grabY)) rotate(var(--grabRotate));
  transition: transform 0.8s;
}

.demo__circle-grabbers:before {
  right: auto;
  left: 5px;
  transform: translateY(var(--grabY)) scaleX(-1) rotate(var(--grabRotate));
}

@keyframes grabAnim {
  40%, 59.999% {
    --grabY: var(--grabbers-shift-y);
    --grabRotate: 55deg;
  }
  60%, 100% {
    --grabY: calc(var(--grab-y-change) + var(--grabbers-shift-y));
    --grabRotate: 55deg;
  }
}

.demo.s--processing .demo__circle-grabbers {
  animation: grabAnim 2s forwards;
}

.demo__circle-progress {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  stroke: #fff;
  stroke-width: 2px;
}

.demo__circle-progress-line {
  stroke-dasharray: 125.68138122558594, 125.68138122558594;
  stroke-dashoffset: 125.68138122558594;
}

.demo.s--processing .demo__circle-progress-line {
  stroke-dashoffset: 0;
  transition: all 0.5s 4.7s;
}

.demo.s--reverting .demo__circle-progress-line {
  stroke-dashoffset: 125.68138122558594;
  transition: all 0.5s 0.96s;
}

.demo__circle-progress-checkmark {
  stroke-dasharray: 21.21320343017578, 21.21320343017578;
  stroke-dashoffset: 21.21320343017578;
}

.demo.s--processing .demo__circle-progress-checkmark {
  stroke-dashoffset: 0;
  transition: all 0.5s 4.7s;
}

.demo.s--reverting .demo__circle-progress-checkmark {
  stroke-dashoffset: 21.21320343017578;
  transition: all 0.5s 0.96s;
}

.demo__text-fields {
  position: relative;
  width: 100%;
  height: 100%;
  color: #fff;
  font-size: 20px;
  letter-spacing: 1.3px;
}

.demo__text {
  position: absolute;
  left: 0;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  opacity: 0;
  transform: translateY(var(--text-y-shift));
  will-change: opacity, transform;
  pointer-events: none;
}

@keyframes textAnimation {
  20%, 80% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(calc(var(--text-y-shift) * -1));
  }
}

.demo__text--step-0 {
  opacity: 1;
  transform: translateY(0);
}

.demo.s--processing .demo__text {
  transition: all 0.4s;
}

.demo.s--processing .demo__text--step-0 {
  opacity: 0;
  transform: translateY(calc(var(--text-y-shift) * -1));
}

.demo.s--processing .demo__text--step-1 {
  animation: textAnimation 2s 0s;
}

.demo.s--processing .demo__text--step-2 {
  animation: textAnimation 2s 2s;
}

.demo.s--processing .demo__text--step-3 {
  animation: textAnimation 2s 4s;
}

.demo.s--processing .demo__text--step-4 {
  transition-delay: 6s;
  transform: translateY(0);
  opacity: 1;
}

.demo.s--reverting .demo__text--step-0 {
  opacity: 1;
  transform: translateY(0);
  transition: all 0.4s 1s;
}

.demo.s--reverting .demo__text--step-4 {
  opacity: 0;
  transform: translateY(var(--text-y-shift));
  transition: all 0.4s 0.8s;
}

.demo__text-dots {
  letter-spacing: -0.5px;
  font-size: 26px;
}

@keyframes dotAnimation {
  10%, 90% { opacity: 0; }
  40%, 60% { opacity: 1; }
}

.demo__text-dots span {
  opacity: 0;
  animation: dotAnimation 1.2s 0.4s infinite;
}

.demo__text-dots:before,
.demo__text-dots:after {
  content: ".";
  opacity: 0;
}

.demo__text-dots:before {
  animation: dotAnimation 1.2s infinite;
}

.demo__text-dots:after {
  animation: dotAnimation 1.2s 0.8s infinite;
}
